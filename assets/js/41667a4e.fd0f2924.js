"use strict";(self.webpackChunkvkpr_docs=self.webpackChunkvkpr_docs||[]).push([[7393],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},l=Object.keys(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=i.createContext({}),c=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=c(e.components);return i.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},p=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=c(n),m=a,k=p["".concat(s,".").concat(m)]||p[m]||d[m]||l;return n?i.createElement(k,r(r({ref:t},u),{},{components:n})):i.createElement(k,r({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,r=new Array(l);r[0]=p;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,r[1]=o;for(var c=2;c<l;c++)r[c]=n[c];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}p.displayName="MDXCreateElement"},2155:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var i=n(7462),a=(n(7294),n(3905));const l={sidebar_position:1,sidebar_label:"VKPR digitalocean cluster init",title:"VKPR digitalocean cluster init"},r="VKPR digitalocean cluster init",o={unversionedId:"commands/digitalocean/cluster/init",id:"commands/digitalocean/cluster/init",title:"VKPR digitalocean cluster init",description:"Description",source:"@site/docs/commands/digitalocean/cluster/init.mdx",sourceDirName:"commands/digitalocean/cluster",slug:"/commands/digitalocean/cluster/init",permalink:"/docs/commands/digitalocean/cluster/init",draft:!1,editUrl:"https://github.com/vertigobr/vkpr-docs/edit/main/docs/commands/digitalocean/cluster/init.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"VKPR digitalocean cluster init",title:"VKPR digitalocean cluster init"},sidebar:"tutorialSidebar",previous:{title:"VKPR devportal remove",permalink:"/docs/commands/devportal/remove"},next:{title:"VKPR digitalocean cluster deploy",permalink:"/docs/commands/digitalocean/cluster/deploy"}},s={},c=[{value:"Description",id:"description",level:2},{value:"Commands",id:"commands",level:2},{value:"Argument Reference",id:"argument-reference",level:2},{value:"Flags",id:"flags",level:3},{value:"Values File",id:"values-file",level:3},{value:"Local",id:"local",level:4},{value:"Environment values",id:"environment-values",level:3},{value:"Setting Provider credentials",id:"setting-provider-credentials",level:2},{value:"Digital Ocean",id:"digital-ocean",level:3},{value:"Gitlab",id:"gitlab",level:3},{value:"See Also",id:"see-also",level:2}],u={toc:c};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,i.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"vkpr-digitalocean-cluster-init"},"VKPR digitalocean cluster init"),(0,a.kt)("h2",{id:"description"},"Description"),(0,a.kt)("p",null,"Fork and setup the ",(0,a.kt)("a",{parentName:"p",href:"https://gitlab.com/vkpr/k8s-digitalocean"},"GitOps Repo")," in your Gitlab, using Gitlab Backend to save the Terraform state."),(0,a.kt)("h2",{id:"commands"},"Commands"),(0,a.kt)("p",null,"Interactive inputs:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"  vkpr digitalocean cluster init [flags]\n")),(0,a.kt)("p",null,"Non-interactive without setting values or using ",(0,a.kt)("inlineCode",{parentName:"p"},"VKPR Values"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"  vkpr digitalocean cluster init --default\n")),(0,a.kt)("h2",{id:"argument-reference"},"Argument Reference"),(0,a.kt)("h3",{id:"flags"},"Flags"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"  --default                Use to automatically fill inputs with default value provided on config.json\n  --cluster_region         Specifies the Cluster Kubernetes Version.\n  --cluster_size           Specifies the number of Nodes.\n  --k8s_version            Specifies the Cluster Kubernetes Version.\n  --project_location       Specifies the Cluster Kubernetes Version.\n  --project_location_path  Specifies the number of Nodes.\n")),(0,a.kt)("h3",{id:"values-file"},"Values File"),(0,a.kt)("h4",{id:"local"},"Local"),(0,a.kt)("p",null,"The following arguments are supported:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"cluster"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"name")," - (Required) Specify the name of the cluster in cloud. The default is ",(0,a.kt)("inlineCode",{parentName:"li"},"do-sample"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"version")," - (Required) Define the Kubernetes version used. Allowed Values: ",(0,a.kt)("inlineCode",{parentName:"li"},"1.22"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"1.21"),". The default is ",(0,a.kt)("inlineCode",{parentName:"li"},"1.22"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"region")," - (Required) Define the Cluster Region. Allowed Values: ",(0,a.kt)("inlineCode",{parentName:"li"},"nyc1"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"nyc2"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"sfo1"),". The default is ",(0,a.kt)("inlineCode",{parentName:"li"},"nyc1"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"nodes"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"instaceType")," - (Required) Specifies the type of the Droplet32222222222231' created to the nodes. Allowed Values: ",(0,a.kt)("inlineCode",{parentName:"li"},"s-2vcpu-2gb"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"s-2vcpu-4gb"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"s-2vcpu-4gb"),". The default is ",(0,a.kt)("inlineCode",{parentName:"li"},"s-2vcpu-2gb"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"quantitySize")," - (Required) Specifies the quantity of nodes created to the cluster. The default is ",(0,a.kt)("inlineCode",{parentName:"li"},"1"),".")))))),(0,a.kt)("h3",{id:"environment-values"},"Environment values"),(0,a.kt)("p",null,"The following variables are supported:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"cluster"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"name")," - ",(0,a.kt)("strong",{parentName:"li"},"VKPR_ENV_DO_CLUSTER_NAME")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"version")," - ",(0,a.kt)("strong",{parentName:"li"},"VKPR_ENV_DO_CLUSTER_VERSION")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"region")," - ",(0,a.kt)("strong",{parentName:"li"},"VKPR_ENV_DO_CLUSTER_REGION")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"nodes"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"instaceType")," - ",(0,a.kt)("strong",{parentName:"li"},"VKPR_ENV_DO_CLUSTER_NODES_INSTANCE_TYPE")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"quantitySize")," - ",(0,a.kt)("strong",{parentName:"li"},"VKPR_ENV_DO_CLUSTER_QUANTITY_SIZE"))))))),(0,a.kt)("h2",{id:"setting-provider-credentials"},"Setting Provider credentials"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"CAUTION: Setting credentials manually will override the credentials already saved in memory")),(0,a.kt)("h3",{id:"digital-ocean"},"Digital Ocean"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'  rit set credential --provider="digitalocean" --fields="token" --values="your-api-token"\n')),(0,a.kt)("h3",{id:"gitlab"},"Gitlab"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'  rit set credential --provider="gitlab" --fields="token,username" --values="your-token,your-username"\n')),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"see-also"},"See Also"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/commands/digitalocean/cluster/deploy"},"VKPR digitalocean cluster deploy")," - Execute the pipeline to deploy the Cluster."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/commands/digitalocean/cluster/destroy"},"VKPR digitalocean cluster destroy")," - Execute the pipeline to destroy the Cluster.")))}d.isMDXComponent=!0}}]);