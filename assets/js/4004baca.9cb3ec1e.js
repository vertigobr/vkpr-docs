"use strict";(self.webpackChunkvkpr_docs=self.webpackChunkvkpr_docs||[]).push([[623],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=p(n),d=a,f=c["".concat(s,".").concat(d)]||c[d]||m[d]||l;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var p=2;p<l;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},5030:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const l={sidebar_position:3,sidebar_label:"VKPR infra start",title:"VKPR infra start"},i="VKPR infra start",o={unversionedId:"commands/infra/start",id:"commands/infra/start",title:"VKPR infra start",description:"Description",source:"@site/docs/commands/infra/start.mdx",sourceDirName:"commands/infra",slug:"/commands/infra/start",permalink:"/docs/commands/infra/start",draft:!1,editUrl:"https://github.com/vertigobr/vkpr-docs/edit/main/docs/commands/infra/start.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,sidebar_label:"VKPR infra start",title:"VKPR infra start"},sidebar:"tutorialSidebar",previous:{title:"VKPR infra down",permalink:"/docs/commands/infra/down"},next:{title:"VKPR infra stop",permalink:"/docs/commands/infra/stop"}},s={},p=[{value:"Description",id:"description",level:2},{value:"Commands",id:"commands",level:2},{value:"Argument Reference",id:"argument-reference",level:2},{value:"Flags",id:"flags",level:3},{value:"Values File",id:"values-file",level:3},{value:"Local",id:"local",level:4},{value:"Environment values",id:"environment-values",level:3},{value:"See Also",id:"see-also",level:2}],u={toc:p};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"vkpr-infra-start"},"VKPR infra start"),(0,a.kt)("h2",{id:"description"},"Description"),(0,a.kt)("p",null,"Create a configurable k3d cluster to test the applications."),(0,a.kt)("h2",{id:"commands"},"Commands"),(0,a.kt)("p",null,"Interactive inputs:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"  vkpr infra start [flags]\n")),(0,a.kt)("p",null,"Non-interactive without setting values or using ",(0,a.kt)("inlineCode",{parentName:"p"},"VKPR Values"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"  vkpr infra start --default\n")),(0,a.kt)("h2",{id:"argument-reference"},"Argument Reference"),(0,a.kt)("h3",{id:"flags"},"Flags"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"  --default         Use to automatically fill inputs with default values.\n  --enable_traefik  Enable Traefik by default in Cluster.\n  --enable_volume   Enable mount of volumes in cluster.\n  --http_port       Specifies the HTTP listening port from the Cluster.\n  --https_port      Specifies the HTTPS listening port from the Cluster.\n  --worker_nodes    Specifies the quantity of Worker nodes.\n")),(0,a.kt)("h3",{id:"values-file"},"Values File"),(0,a.kt)("h4",{id:"local"},"Local"),(0,a.kt)("p",null,"The following arguments are supported:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"enabled")," - (Required unless using the ",(0,a.kt)("a",{parentName:"li",href:"/docs/commands/apply"},"vkpr apply"),") Enable the auto install from the application."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"httpPort")," - (Required) Specifies the HTTP port on which the Cluster will communicate. The default is ",(0,a.kt)("inlineCode",{parentName:"li"},"8000"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"httpsPort")," - (Required) Specifies the HTTPS port on which the Cluster will communicate. The default is ",(0,a.kt)("inlineCode",{parentName:"li"},"8001"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"enableTraefik")," - (Required) Enable ingressController Traefik on the cluster. The default is ",(0,a.kt)("inlineCode",{parentName:"li"},"false"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"enableVolume")," - (Required) Enables local mapping of volumes on the cluster. The default is ",(0,a.kt)("inlineCode",{parentName:"li"},"false"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"resources"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"masters")," - (Optional) Specifies the number of CP nodes in the cluster. The default is ",(0,a.kt)("inlineCode",{parentName:"li"},"1"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"workers")," - (Optional) Specifies the number of DP nodes in the cluster. The default is ",(0,a.kt)("inlineCode",{parentName:"li"},"1"),".")))),(0,a.kt)("h3",{id:"environment-values"},"Environment values"),(0,a.kt)("p",null,"The following variables are supported:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"httpPort")," - ",(0,a.kt)("strong",{parentName:"li"},"VKPR_ENV_HTTP_PORT")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"httpsPort")," - ",(0,a.kt)("strong",{parentName:"li"},"VKPR_ENV_HTTPS_PORT")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"enableTraefik")," - ",(0,a.kt)("strong",{parentName:"li"},"VKPR_ENV_TRAEFIK")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"enableVolume")," - ",(0,a.kt)("strong",{parentName:"li"},"VKPR_ENV_VOLUME")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"resources"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"masters")," - ",(0,a.kt)("strong",{parentName:"li"},"VKPR_ENV_K3D_SERVERS")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"workers")," - ",(0,a.kt)("strong",{parentName:"li"},"VKPR_ENV_K3D_AGENTS"))))),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"see-also"},"See Also"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/commands/infra/stop"},"VKPR infra stop")," - Delete the local cluster created.")))}m.isMDXComponent=!0}}]);