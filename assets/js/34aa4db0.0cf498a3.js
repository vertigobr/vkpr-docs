"use strict";(self.webpackChunkvkpr_docs=self.webpackChunkvkpr_docs||[]).push([[469],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=p(n),m=i,v=c["".concat(s,".").concat(m)]||c[m]||d[m]||l;return n?a.createElement(v,r(r({ref:t},u),{},{components:n})):a.createElement(v,r({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,r=new Array(l);r[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,r[1]=o;for(var p=2;p<l;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},8471:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var a=n(7462),i=(n(7294),n(3905));const l={sidebar_position:1,sidebar_label:"Using VKPR Values",title:"Using VKPR Values",slug:"/provisioning/values"},r="Using VKPR Values",o={unversionedId:"provisioning-guide/vkpr-values",id:"provisioning-guide/vkpr-values",title:"Using VKPR Values",description:"In the previous examples, we tested the applications by going through the decision tree that VKPR offers. One of the tools that is used by VKPR to abstract the values \u200b\u200bprovided by both the decision tree and flags, serial or vkpr.yaml.",source:"@site/docs/provisioning-guide/vkpr-values.md",sourceDirName:"provisioning-guide",slug:"/provisioning/values",permalink:"/docs/provisioning/values",draft:!1,editUrl:"https://github.com/vertigobr/vkpr-docs/edit/main/docs/provisioning-guide/vkpr-values.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"Using VKPR Values",title:"Using VKPR Values",slug:"/provisioning/values"},sidebar:"tutorialSidebar",previous:{title:"Provisioning guide",permalink:"/docs/provisioning"},next:{title:"Local Development",permalink:"/docs/provisioning/dev/local"}},s={},p=[{value:"Creating the VKPR Values",id:"creating-the-vkpr-values",level:2},{value:"Globals",id:"globals",level:3},{value:"Credentials",id:"credentials",level:3},{value:"Precedence of values",id:"precedence-of-values",level:2},{value:"Example VKPR Values",id:"example-vkpr-values",level:2}],u={toc:p};function d(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"using-vkpr-values"},"Using VKPR Values"),(0,i.kt)("p",null,"In the previous examples, we tested the applications by going through the decision tree that VKPR offers. One of the tools that is used by VKPR to abstract the values \u200b\u200bprovided by both the decision tree and flags, serial or ",(0,i.kt)("inlineCode",{parentName:"p"},"vkpr.yaml"),"."),(0,i.kt)("p",null,"If you want to save the state of your applications, rewrite the default values \u200b\u200bof formulas, and don't always have to go through the decision tree of formulas, we recommend that you use VKPR Values \u200b\u200bto deploy all the applications you want."),(0,i.kt)("admonition",{title:"Caution!",type:"danger"},(0,i.kt)("p",{parentName:"admonition"},"VKPR only finds the values \u200b\u200bfile that is in the current directory where the command was executed.",(0,i.kt)("br",null),"\nExample: ",(0,i.kt)("inlineCode",{parentName:"p"},"$(pwd)/vkpr.yaml"))),(0,i.kt)("h2",{id:"creating-the-vkpr-values"},"Creating the VKPR Values"),(0,i.kt)("p",null,"VKPR values \u200b\u200bis exclusively written in ",(0,i.kt)("inlineCode",{parentName:"p"},"YAML")," based on a node structure."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="structure"',title:'"structure"'},"parent-node:    # Application \n  child-node:   # Argument\n  ...\n")),(0,i.kt)("admonition",{title:"Tip",type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"Specifying key values \u200b\u200bfor each application is described in the application's documentation.")),(0,i.kt)("h3",{id:"globals"},"Globals"),(0,i.kt)("p",null,"In VKPR Values, you will be specifying the values \u200b\u200bto be used in the installation of the application, some of the configurations can be defined in the global domains as the ",(0,i.kt)("inlineCode",{parentName:"p"},"global")," option that will serve the application if the same configuration is not defined in a child node (some of values \u200b\u200bwill not be able to be specified in the application)."),(0,i.kt)("p",null,"Here is the list of key values \u200b\u200bin the ",(0,i.kt)("inlineCode",{parentName:"p"},"global")," option"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"domain")," - specifies the domain that will be used in the application. The default value is ",(0,i.kt)("inlineCode",{parentName:"li"},"localhost"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"secure")," - specifies whether the application will be exposed by the ingressControler as HTTP/HTTPS. The default value is ",(0,i.kt)("inlineCode",{parentName:"li"},"false"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ingressClassName")," - specifies which ingressControler will be responsible for exposing the application. Allowed values: ",(0,i.kt)("inlineCode",{parentName:"li"},"kong")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"nginx")," The default value is ",(0,i.kt)("inlineCode",{parentName:"li"},"nginx"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"namespace")," - specifies the namespace that will be used for installing applications. The default value is ",(0,i.kt)("inlineCode",{parentName:"li"},"vkpr"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"provider")," - (Optional) specifies the provider the application should support. Allowed values: ",(0,i.kt)("inlineCode",{parentName:"li"},"aws"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"digitalocean")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"okteto"),".")),(0,i.kt)("h3",{id:"credentials"},"Credentials"),(0,i.kt)("p",null,"VKPR Values \u200b\u200balso, like ",(0,i.kt)("inlineCode",{parentName:"p"},"global"),", provides the option to configure cloud provider credentials via the ",(0,i.kt)("inlineCode",{parentName:"p"},"credentials")," node."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="vkpr.yaml"',title:'"vkpr.yaml"'},'credentials:\n  aws:\n    accessKey: ""  \n    secretKey: ""\n    region: ""\n  digitalocean:\n    apiToken: ""\n')),(0,i.kt)("admonition",{title:"Relevant!",type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"Using credentials in this field only works using the formula in ",(0,i.kt)("a",{parentName:"p",href:"/docs/commands/apply"},(0,i.kt)("inlineCode",{parentName:"a"},"vkpr apply")),".")),(0,i.kt)("h2",{id:"precedence-of-values"},"Precedence of values"),(0,i.kt)("p",null,"There is a precedence of values \u200b\u200bwhich VKPR follows, some of the values \u200b\u200bhave their own options within application nodes which will have a higher precedence than the global values. The values \u200b\u200bthey have between ",(0,i.kt)("inlineCode",{parentName:"p"},"global")," and applications are: ",(0,i.kt)("inlineCode",{parentName:"p"},"ingresClassName")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"namespace"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="Precedence example"',title:'"Precedence','example"':!0},'global:\n  namespace: "foo" \nwhoami:\n  namespace: "bar" \n# The whoami application will be installed in the "bar" namespace\n')),(0,i.kt)("p",null,"Generally speaking, it's not just ",(0,i.kt)("inlineCode",{parentName:"p"},"vkpr.yaml")," that takes precedence, all values \u200b\u200bthat vkpr receives take precedence."),(0,i.kt)("p",null,"The order of precedence from minor to major is as follows:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"default")," - Default value if not specified previously."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"env")," - (environment variable) variable values \u200b\u200bof your environment."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"VKPR values")," - (vkpr.yaml) values \u200b\u200bassigned by having or specifying the VKPR Values \u200b\u200bconfiguration file in your default directory."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"input")," - Values \u200b\u200bdefined in the decision tree or assigned by flags.")),(0,i.kt)("h2",{id:"example-vkpr-values"},"Example VKPR Values"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="vkpr.yaml"',title:'"vkpr.yaml"'},'global:\n  domain: localhost\n  secure: false\n  ingressClassName: nginx\n  namespace: vkpr\n  provider: "" \ncredentials:\n  aws:\n    accessKey: "" \n    secretKey: ""\n    region: ""\n  digitalocean:\n    apiToken: ""\n')))}d.isMDXComponent=!0}}]);