"use strict";(self.webpackChunkvkpr_docs=self.webpackChunkvkpr_docs||[]).push([[7503],{3905:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>m});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=n.createContext({}),l=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},u=function(e){var r=l(e.components);return n.createElement(c.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=l(t),m=a,g=d["".concat(c,".").concat(m)]||d[m]||p[m]||o;return t?n.createElement(g,s(s({ref:r},u),{},{components:t})):n.createElement(g,s({ref:r},u))}));function m(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=d;var i={};for(var c in r)hasOwnProperty.call(r,c)&&(i[c]=r[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=t[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},6652:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var n=t(7462),a=(t(7294),t(3905));const o={sidebar_position:1,sidebar_label:"Ingress",title:"Ingress",slug:"/category/ingress"},s="Ingress",i={unversionedId:"components-guide/ingress",id:"components-guide/ingress",title:"Ingress",description:"Para que os usu\xe1rios acessem os aplicativos internos de um cluster K8S, \xe9 necess\xe1rio usar o Ingress. Mas para que o Ingress funcione, voc\xea precisar\xe1 de um Ingress-Controller para gerenciar todo o balanceamento de carga.",source:"@site/i18n/pt/docusaurus-plugin-content-docs/current/components-guide/ingress.mdx",sourceDirName:"components-guide",slug:"/category/ingress",permalink:"/pt/docs/category/ingress",draft:!1,editUrl:"https://github.com/vertigobr/vkpr-docs/edit/main/docs/components-guide/ingress.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"Ingress",title:"Ingress",slug:"/category/ingress"},sidebar:"tutorialSidebar",previous:{title:"Okteto",permalink:"/pt/docs/provisioning/dev/cloud/okteto"},next:{title:"Observabilidade",permalink:"/pt/docs/category/observability"}},c={},l=[],u={toc:l};function p(e){let{components:r,...t}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"ingress"},"Ingress"),(0,a.kt)("p",null,"Para que os usu\xe1rios acessem os aplicativos internos de um cluster K8S, \xe9 necess\xe1rio usar o Ingress. Mas para que o Ingress funcione, voc\xea precisar\xe1 de um Ingress-Controller para gerenciar todo o balanceamento de carga."),(0,a.kt)("p",null,"O VKPR oferece quatro tipos de Ingress Controller:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.consul.io/docs"},"Consul"),": O Consul \xe9 uma ferramenta multi-rede que resolve os desafios de rede e seguran\xe7a da opera\xe7\xe3o de microsservi\xe7os e infraestrutura em nuvem. Para visualizar os comandos do Consul, clique ",(0,a.kt)("a",{parentName:"li",href:"/docs/commands/consul/install"},"aqui")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/kubernetes/ingress-nginx"},"nGINX"),": Controlador de entrada para Kubernetes usando NGINX como proxy reverso e balanceador de carga. Para visualizar os comandos do nGINX, clique ",(0,a.kt)("a",{parentName:"li",href:"/docs/commands/nginx/install"},"aqui")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.konghq.com/"},"Kong"),": Gateway de API criado para nuvem h\xedbrida e multinuvem, otimizado para microsservi\xe7os e arquiteturas distribu\xeddas. Para visualizar os comandos do Kong, clique ",(0,a.kt)("a",{parentName:"li",href:"/docs/commands/kong/install"},"aqui")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://doc.traefik.io/traefik/"},"Traefik"),": Um proxy reverso HTTP moderno e balanceador de carga feito para implantar microsservi\xe7os com facilidade. (Somente em Env local) Para visualizar os comandos do Traefik, clique ",(0,a.kt)("a",{parentName:"li",href:"/docs/commands/infra/start"},"aqui"))))}p.isMDXComponent=!0}}]);