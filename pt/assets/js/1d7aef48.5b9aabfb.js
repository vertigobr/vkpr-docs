"use strict";(self.webpackChunkvkpr_docs=self.webpackChunkvkpr_docs||[]).push([[8328],{3905:(e,o,a)=>{a.d(o,{Zo:()=>l,kt:()=>m});var r=a(7294);function n(e,o,a){return o in e?Object.defineProperty(e,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[o]=a,e}function t(e,o){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);o&&(r=r.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var o=1;o<arguments.length;o++){var a=null!=arguments[o]?arguments[o]:{};o%2?t(Object(a),!0).forEach((function(o){n(e,o,a[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):t(Object(a)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(a,o))}))}return e}function i(e,o){if(null==e)return{};var a,r,n=function(e,o){if(null==e)return{};var a,r,n={},t=Object.keys(e);for(r=0;r<t.length;r++)a=t[r],o.indexOf(a)>=0||(n[a]=e[a]);return n}(e,o);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(r=0;r<t.length;r++)a=t[r],o.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var d=r.createContext({}),p=function(e){var o=r.useContext(d),a=o;return e&&(a="function"==typeof e?e(o):s(s({},o),e)),a},l=function(e){var o=p(e.components);return r.createElement(d.Provider,{value:o},e.children)},c={inlineCode:"code",wrapper:function(e){var o=e.children;return r.createElement(r.Fragment,{},o)}},u=r.forwardRef((function(e,o){var a=e.components,n=e.mdxType,t=e.originalType,d=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),u=p(a),m=n,f=u["".concat(d,".").concat(m)]||u[m]||c[m]||t;return a?r.createElement(f,s(s({ref:o},l),{},{components:a})):r.createElement(f,s({ref:o},l))}));function m(e,o){var a=arguments,n=o&&o.mdxType;if("string"==typeof e||n){var t=a.length,s=new Array(t);s[0]=u;var i={};for(var d in o)hasOwnProperty.call(o,d)&&(i[d]=o[d]);i.originalType=e,i.mdxType="string"==typeof e?e:n,s[1]=i;for(var p=2;p<t;p++)s[p]=a[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},7196:(e,o,a)=>{a.r(o),a.d(o,{assets:()=>d,contentTitle:()=>s,default:()=>c,frontMatter:()=>t,metadata:()=>i,toc:()=>p});var r=a(7462),n=(a(7294),a(3905));const t={sidebar_position:1,sidebar_label:"AWS EKS",title:"AWS EKS",slug:"/provisioning/dev/cloud/aws"},s=void 0,i={unversionedId:"provisioning-guide/cloud-dev/aws-eks",id:"provisioning-guide/cloud-dev/aws-eks",title:"AWS EKS",description:"Provisionando com AWS EKS",source:"@site/i18n/pt/docusaurus-plugin-content-docs/current/provisioning-guide/cloud-dev/aws-eks.md",sourceDirName:"provisioning-guide/cloud-dev",slug:"/provisioning/dev/cloud/aws",permalink:"/pt/docs/provisioning/dev/cloud/aws",draft:!1,editUrl:"https://github.com/vertigobr/vkpr-docs/edit/main/docs/provisioning-guide/cloud-dev/aws-eks.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"AWS EKS",title:"AWS EKS",slug:"/provisioning/dev/cloud/aws"},sidebar:"tutorialSidebar",previous:{title:"Desenvolvimento em nuvem",permalink:"/pt/docs/provisioning/dev/cloud"},next:{title:"Okteto",permalink:"/pt/docs/provisioning/dev/cloud/okteto"}},d={},p=[{value:"Provisionando com AWS EKS",id:"provisionando-com-aws-eks",level:2},{value:"Iniciando o deploy",id:"iniciando-o-deploy",level:3},{value:"Derrubando o cluster",id:"derrubando-o-cluster",level:3}],l={toc:p};function c(e){let{components:o,...t}=e;return(0,n.kt)("wrapper",(0,r.Z)({},l,t,{components:o,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"provisionando-com-aws-eks"},"Provisionando com AWS EKS"),(0,n.kt)("p",null,"O VKPR possui uma s\xe9rie de comandos para provisionamento local e configura\xe7\xe3o de sua aplica\xe7\xe3o, por\xe9m voc\xea tamb\xe9m pode instalar todas as suas aplica\xe7\xf5es diretamente no cluster de seu provedor na nuvem atrav\xe9s do VKPR."),(0,n.kt)("p",null,"Usando uma das aplica\xe7\xf5es do VKPR o AWS EKS podemos executar o comando que ficara respons\xe1vel por criar um fork de nosso reposit\xf3rio com todas as dependencias necessarias para o provisionamento, uma branch contendo o nome de nosso cluster ser\xe1 criada contendo as informa\xe7\xf5es solicitadas na execu\xe7\xe3o do comando respons\xe1vel pelo provisionamento."),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Fork VKPR repo",src:a(5033).Z,width:"1918",height:"945"})),(0,n.kt)("p",null,"Primeiro precisamos executar a f\xf3rmula ",(0,n.kt)("inlineCode",{parentName:"p"},"vkpr aws eks init")," respons\xe1vel por inicializar o cluster com nome, quantidade de n\xf3s desejados, vers\xe3o do kubernetes , tipo de instancia, dentre outras informa\xe7\xf5es questionadas na \xe1rvore de decis\xf5es da f\xf3rmula."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"$ vkpr aws eks init\nFormula was successfully built!\n? Project location: user\n? EKS cluster name: eks-sample\n? K8s version 1.21\n? Choose nodes instance type: t3.small\n? Desired number of nodes: 2\n? Choose the capacity type from the nodes: on_demand\n? Choose where to store the state of Terraform: gitlab\n")),(0,n.kt)("p",null,"Ap\xf3s a execu\xe7\xe3o poderemos visualizar a s\xe9rie de informa\xe7\xf5es referentes a clonagem, bem como a cria\xe7\xe3o de um fork do reposit\xf3rio git do VKPR, onde est\xe3o armazenados todos os templates terraform que ser\xe3o executados para provisionar a infraestrutura."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"...\nSwitched to a new branch 'eks-sample'\n[eks-sample e8cb271] [VKPR] Initial configuration defaults.yml\n 1 file changed, 10 insertions(+), 10 deletions(-)\nEnumerating objects: 7, done.\nCounting objects: 100% (7/7), done.\nDelta compression using up to 8 threads\nCompressing objects: 100% (3/3), done.\nWriting objects: 100% (4/4), 423 bytes | 423.00 KiB/s, done.\nTotal 4 (delta 2), reused 0 (delta 0), pack-reused 0\nremote: \nremote: To create a merge request for eks-sample, visit:\nremote:   https://gitlab.com/repository/aws-eks/-/merge_requests/new?merge_request%5Bsource_branch%5D=eks-sample\nremote: \nTo https://gitlab.com/repository/aws-eks.git\n * [new branch]      eks-sample -> eks-sample\nBranch 'eks-sample' set up to track remote branch 'eks-sample' from 'origin'.\n...\n")),(0,n.kt)("p",null,"Nesse momento ja podemos acompanhar a pipeline executando as steps de iniciais de provisionamento visitando a parte de CI/CD de nosso reposit\xf3rio recem criado, la poderemos visualizar as vari\xe1veis criadas pelo VKPR referentes a credenciais e dados sensiveis tudo com a maior preocupa\xe7\xe3o de prote\xe7\xe3o aos dados, tomamos como exemplo abaixo o reposit\xf3rio GitLab."),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Gitlab pipeline",src:a(4562).Z,width:"1918",height:"945"})),(0,n.kt)("p",null,"Os dados solicitados na \xe1rvore de decis\xf5es esses ficam armazenados em config/defaults.yml na branch de nosso reposit\xf3rio rec\xe9m forkado."),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Gitlab configs",src:a(421).Z,width:"1918",height:"945"})),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"Para saber mais sobre os valores permitidos no ",(0,n.kt)("inlineCode",{parentName:"p"},"defaults.yml"),", clique ",(0,n.kt)("a",{parentName:"p",href:"https://gitlab.com/vkpr/terraform-aws-eks"},"aqui"))),(0,n.kt)("h3",{id:"iniciando-o-deploy"},"Iniciando o deploy"),(0,n.kt)("p",null,"Assim ja poderemos iniciar a pipeline de deploy ou executar o comando ",(0,n.kt)("inlineCode",{parentName:"p"},"vkpr aws eks deploy")," referente ao deploy de nosso cluster."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"$ vkpr aws eks deploy\nFormula was successfully built!\nDeploy job started successfully\n")),(0,n.kt)("p",null,"Poderemos visualizar o arquivos de kubeconfig sendo gerado na parte de artefatos ao final da execu\xe7\xe3o da pipeline, por\xe9m o VKPR disp\xf5e de funcionalidades para a extra\xe7\xe3o deste arquivo. Executando o comando ",(0,n.kt)("inlineCode",{parentName:"p"},"vkpr aws eks kubeconfig")," o VKPR ser\xe1 cap\xe1z de extrair automaticamente o kubeconfig diretamente da pipeline de nossa infraestrutura rec\xe9m provisionada. "),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"Para saber mais sobre o kubeconfig clique ",(0,n.kt)("a",{parentName:"p",href:"https://jamesdefabia.github.io/docs/user-guide/kubectl/kubectl_config/"},"aqui"))),(0,n.kt)("h3",{id:"derrubando-o-cluster"},"Derrubando o cluster"),(0,n.kt)("p",null,"Outro comando que o VKPR disponibiliza \xe9 o de destrui\xe7\xe3o do cluster provisionado atrav\xe9s dos passos anteriores. Com a execu\xe7\xe3o do comando ",(0,n.kt)("inlineCode",{parentName:"p"},"vkpr aws eks destroy")," ser\xe1 disparada a ultima etapa da pipeline de nosso reposit\xf3rio que ir\xe1 por abaixo toda a infraestrutura provisionada anteriormente."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"$ vkpr aws eks deploy\nFormula was successfully built!\nDestroy job started successfully\n")),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Pipeline completa",src:a(2292).Z,width:"1918",height:"945"})))}c.isMDXComponent=!0},421:(e,o,a)=>{a.d(o,{Z:()=>r});const r=a.p+"assets/images/configs-defaults-e3d4fd4ae4e835f212f06532ce50b7fb.png"},5033:(e,o,a)=>{a.d(o,{Z:()=>r});const r=a.p+"assets/images/fork-repo-05c17dd2014c8c9e0ca2c0a61bbae125.png"},4562:(e,o,a)=>{a.d(o,{Z:()=>r});const r=a.p+"assets/images/initial-step-pipeline-57d9145a132fb7aee093fc36120651c1.png"},2292:(e,o,a)=>{a.d(o,{Z:()=>r});const r=a.p+"assets/images/pipeline-deploy-ff533c8a9fa6e49d41fbe1e7a6e8b85c.png"}}]);